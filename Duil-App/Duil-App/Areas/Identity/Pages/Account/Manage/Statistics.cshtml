@page
@model Duil_App.Areas.Identity.Pages.Account.Manage.StatisticsModel
@using Duil_App.Resources
@{
    ViewData["Title"] = Resource.Estatisticas;
    ViewData["ActivePage"] = ManageNavPages.Statistics;
    ViewData["BodyClass"] = "paginas-index-fundo";
}

<div class="container pt-3 px-5">
    <div class="mb-4">
        <h3 style="display:inline">@ViewData["Title"]</h3>
        <i class="ms-3 bi bi-bar-chart-fill text-secondary"></i>
        <hr class="mt-2 mb-4" />
    </div>

    <div class="row">
        <div class="col-md-10">
            <div class="d-flex">
                <ul class="list-group flex-grow-1 me-3 shadow-sm">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-bag-fill me-2 text-primary"></i> @Resource.TotalEncomendas</span>
                        <strong>@Model.TotalEncomendas</strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-check-circle-fill me-2 text-success"></i> @Resource.EncomendasConcretizadas</span>
                        <strong>@Model.EncomendasConcretizadas</strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-gear-fill me-2 text-warning"></i> @Resource.NPecas</span>
                        <strong>@Model.NumeroPecas</strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-calendar-check-fill me-2 text-info"></i> @Resource.LastE</span>
                        <strong>
                            @(Model.DataUltimaEncomenda.HasValue
                                ? Model.DataUltimaEncomenda.Value.ToString("dd/MM/yyyy")
                                : "N/A")
                        </strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-award-fill me-2 text-secondary"></i> @Resource.moree</span>
                        <strong>@(!string.IsNullOrEmpty(Model.PecaMaisEncomendada) ? Model.PecaMaisEncomendada : "N/A")</strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-boxes me-2 text-dark"></i> @Resource.TotalEnee</span>
                        <strong>@Model.TotalQuantidadePecas</strong>
                    </li>
                </ul>

                <div class="d-flex flex-column align-items-center ms-5">
                    <h5 class="mb-3">@Resource.Dist</h5>

                    @if (Model.TotalEncomendas == 0)
                    {
                        <p class="text-muted">@Resource.NoEE</p>
                    }
                    else
                    {
                        <canvas id="encomendasPieChart" style="width:200px; height:200px;"></canvas>
                    }
                </div>

            </div>
        </div>

        <div class="col-md-2 mt-4">
            <ul style="list-style:none; padding-left:0;">
                <li style="display:flex; align-items:center; margin-bottom:0.25rem;">
                    <span class="legend-box bg-warning"></span> @Resource.Pendente
                </li>
                <li style="display:flex; align-items:center; margin-bottom:0.25rem;">
                    <span class="legend-box bg-primary"></span> @Resource.Confirmada
                </li>
                <li style="display:flex; align-items:center; margin-bottom:0.25rem;">
                    <span class="legend-box bg-success"></span> @Resource.Concretizada
                </li>
                <li style="display:flex; align-items:center;">
                    <span class="legend-box bg-danger"></span> @Resource.Cancelada
                </li>
            </ul>
        </div>
    </div>
</div>

<style>
    .legend-box {
        display: inline-block;
        width: 14px;
        height: 14px;
        border-radius: 3px;
        margin-right: 5px;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('encomendasPieChart').getContext('2d');
        const encomendasPieChart = new Chart(ctx, {
            type: 'doughnut', // gráfico de donut
            data: {
                labels: ['Pendente', 'Confirmada', 'Concretizada', 'Cancelada'],
                datasets: [{
                    label: 'Distribuição de Encomendas',
                    data: [
        @Model.NumPendente,
        @Model.NumConfirmada,
        @Model.NumConcretizada,
        @Model.NumCancelada
                            ],
                    backgroundColor: [
                        'rgba(255, 223, 128, 0.7)',    // amarelo suave
                        'rgba(100, 149, 237, 0.7)',    // azul claro (cornflower blue)
                        'rgba(144, 238, 144, 0.7)',    // verde claro (light green)
                        'rgba(255, 182, 193, 0.7)'     // rosa claro (light pink)
                    ],
                    borderColor: [
                        'rgba(255, 223, 128, 1)',
                        'rgba(100, 149, 237, 1)',
                        'rgba(144, 238, 144, 1)',
                        'rgba(255, 182, 193, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                cutout: '50%',
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const value = context.raw;
                                const percentage = ((value / total) * 100).toFixed(1);
                                return `${context.label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    </script>
}

<style>
    .legend-box {
        display: inline-block;
        width: 14px;
        height: 14px;
        border-radius: 3px;
        margin-right: 5px;
    }
    .bg-warning {
        background-color: rgba(255, 223, 128, 1) !important;
    }
    .bg-primary {
        background-color: rgba(100, 149, 237, 1) !important;
    }
    .bg-success {
        background-color: rgba(144, 238, 144, 1) !important;
    }
    .bg-danger {
        background-color: rgba(255, 182, 193, 1) !important;
    }
</style>


