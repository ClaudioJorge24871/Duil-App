@model IEnumerable<Duil_App.Models.Encomendas>

@{
    ViewData["Title"] = "Index";
    ViewData["BodyClass"] = "paginas-index-fundo";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">


<div class="container-fluid d-flex justify-content-center align-items-center position-relative"
     style="height: 250px; background-color: #b4bdc1;">
    <h1 class="fw-light text-white">Encomendas</h1>

    <a asp-action="Create"
    class="btn position-absolute fs-5 px-5 py-3 navbar-blue text-white"
    style="bottom: 0; transform: translateY(50%); right: 80px; border-radius: 10px;">
        Criar Encomenda
    </a>

</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" id="success-alert">
        @TempData["SuccessMessage"]
    </div>
}
<div class="container p-5 mt-4">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    OE
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClienteId)
                </th>
                <th>
                    Nome do Cliente
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.QuantidadeTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalPrecoUnit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estado)
                </th>

                <th>
                    Ações
                </th>
            </tr>
        </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.IdLadoCliente)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClienteId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cliente.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantidadeTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalPrecoUnit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estado)
                </td>
                <td>
                    @if (!User.IsInRole("Cliente"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id"
                               class="btn btn-sm btn-outline-primary me-1"
                               title="Modificar">
                                <i class="bi bi-pencil-fill"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id"
                               class="btn btn-sm btn-outline-danger me-1"
                               title="Apagar">
                                <i class="bi bi-trash-fill"></i>
                            </a>
                        }
                        <a asp-action="Details" asp-route-id="@item.Id"
                           class="btn btn-sm btn-outline-secondary"
                           title="Mais Info">
                            <i class="bi bi-info-circle-fill"></i>
                        </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    setTimeout(function () {
        var alert = document.getElementById("success-alert");
        if (alert) {
            alert.style.transition = "opacity 0.5s ease-out";
            alert.style.opacity = "0";
            setTimeout(() => alert.remove(), 500); // remove da DOM após fade out
        }
    }, 3000); // 3 segundos
</script>
