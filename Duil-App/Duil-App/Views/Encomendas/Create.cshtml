@model Duil_App.Models.Encomendas

@{
    ViewData["Title"] = "Create";
}


<h1>Nova encomenda</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="IdLadoCliente" class="control-label"></label>
                <input asp-for="IdLadoCliente" class="form-control" />
                <span asp-validation-for="IdLadoCliente" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Data" class="control-label"></label>
                <input asp-for="Data" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="Data" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalPrecoUnit" class="control-label"></label>
                <input asp-for="TotalPrecoUnit" class="form-control" />
                <span asp-validation-for="TotalPrecoUnit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="QuantidadeTotal" class="control-label"></label>
                <input asp-for="QuantidadeTotal" class="form-control" />
                <span asp-validation-for="QuantidadeTotal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Transportadora" class="control-label"></label>
                <input asp-for="Transportadora" class="form-control" />
                <span asp-validation-for="Transportadora" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Nome do Cliente</label>
                <input type="text" id="cliente-nome" class="form-control" autocomplete="off" />
                <input asp-for="ClienteId" type="hidden" id="ClienteId" />
                <span asp-validation-for="ClienteId" class="text-danger"></span>
            </div>

            <div id="pecasContainer">
                <div class="form-group">
                    <label>Peça</label>
                    <select name="pecasSelecionadas" class="form-control">
                        <option value="">-- Selecione uma peça --</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Quantidade</label>
                    <input type="number" name="quantidades" class="form-control" value="1" />
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Criar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />

    <script>
        $(function () {
            var clienteSelected = false;

            $("#cliente-nome").autocomplete({
                source: '/Clientes/Search',
                minLength: 1,
                select: function (event, ui) {
                    $("#cliente-nome").val(ui.item.label);
                    $("#ClienteId").val(ui.item.value);

                //buscar as peças desse cliente
                fetch(`/Encomendas/GetPecasPorCliente?clienteId=${ui.item.value}`)
                .then(response => response.json())
                .then(data => {
                    const pecasSelect = document.querySelector("select[name='pecasSelecionadas']");
                    pecasSelect.innerHTML = "";

                    if (data.length === 0) {
                        pecasSelect.innerHTML = "<option value=''>Nenhuma peça encontrada</option>";
                        return;
                    }

                    data.forEach(p => {
                        const option = document.createElement("option");
                        option.value = p.id;
                        option.text = p.nome;
                        pecasSelect.appendChild(option);
                    });
                })
                .catch(error => console.error("Erro ao carregar peças:", error));

        return false;


                    clienteSelected = true;
                    return false;
                },
                focus: function (event, ui) {
                    event.preventDefault();
                }
            });

            $("#cliente-nome").on("input", function () {
                $("#ClienteId").val("");
                clienteSelected = false;
            });

            $("form").on("submit", function (event) {
                var nomeCliente = $("#cliente-nome").val();
                var clienteId = $("#ClienteId").val();

                if (!clienteSelected && nomeCliente !== "") {
                    event.preventDefault();
                    $("[data-valmsg-for='ClienteId']").text("Por favor, selecione um cliente da lista");
                    return false;
                }

                if (clienteId === "") {
                    event.preventDefault();
                    $("[data-valmsg-for='ClienteId']").text("O cliente é obrigatório");
                    return false;
                }
            });
        });

    </script>
}

