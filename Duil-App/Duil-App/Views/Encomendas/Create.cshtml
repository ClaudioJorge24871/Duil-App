@model Duil_App.Models.Encomendas

@using Duil_App.Models
@using Duil_App.Resources
@using Duil_App.Code

@{
    ViewData["Title"] = Resource.CriarEncomenda;
    var clienteId = ViewBag.ClienteId as string;
    ViewData["Estado"] = EstadosTraduzidosHelper.GetEstadosTraduzidos();
}

@if (!User.IsInRole("Cliente"))
{
    <div>
        <a asp-action="Index"><i class="bi bi-arrow-left fs-3 ms-3" style="color:#6B97AC"></i></a>
    </div>
}

<div class="d-flex justify-content-center mt-5 min-vh-100">
    <div class="container mt-5" style="width:80%">
        <h3 class="mb-2 grey-text">@Resource.NovaEncomenda</h3>
        <hr />

        <form asp-action="Create" id="encomendaForm">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row mt-3">
                <div class="col-md-6 mb-3">
                    <input asp-for="IdLadoCliente" class="form-control" placeholder=@Resource.OrdemDeEncomenda />
                    <span asp-validation-for="IdLadoCliente" class="text-danger"></span>
                </div>
                @if (User.IsInRole("Cliente"))
                {
                    <div class="col-md-6 mb-3">
                        <input asp-for="Data" type="date" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" readonly />
                    </div>
                }
                else
                {
                    <div class="col-md-6 mb-3">
                        <input asp-for="Data" type="date" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        <span asp-validation-for="Data" class="text-danger"></span>
                    </div>
                }
            </div>

            <div class="row mb-3">
                <div class="col-md-6 mb-3">
                    <input asp-for="Transportadora" class="form-control" placeholder=@Resource.EmpresaTrans />
                    <span asp-validation-for="Transportadora" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    @if (User.IsInRole("Cliente"))
                    {
                        <input type="hidden" asp-for="ClienteId" value="@clienteId" id="ClienteId" />
                    }
                    else
                    {
                        <input type="hidden" asp-for="ClienteId" id="ClienteId" />
                        <input type="text" id="cliente-nome" class="form-control" placeholder=@Resource.NomeDoCliente autocomplete="off" />
                        <span asp-validation-for="ClienteId" class="text-danger"></span>
                    }
                </div>
            </div>

            <div id="pecasSection">
                <div id="sem-cliente" class="text-center mt-4">
                    <h5 class="text-muted">@Resource.PorfavorAdicioneClienteParaPecas</h5>
                </div>
                <div id="pecasCards" class="row g-3"></div>
                <div class="mt-2">
                    <button type="button" id="addPecaBtn" class="btn btn-secondary btn-sm" style="display:none;">@Resource.AdicionarPecaemEncomendas</button>
                </div>
            </div>

            <div id="hidden-inputs-container"></div>

            @if (!User.IsInRole("Cliente"))
            {
                <div class="row mt-3">
                    <div class="col-md-6 mb-3">
                        <label asp-for="Estado" class="form-label">@Resource.Estado</label>
                        <select asp-for="Estado" asp-items="ViewBag.Estado" class="form-control">
                            <option value="">-- @Resource.SelecioneEstado --</option>
                        </select>
                        <span asp-validation-for="Estado" class="text-danger"></span>
                    </div>
                </div>
            }

            <div class="row mt-3">
                <div class="col-md-6 mb-3">
                    <input type="text" id="QuantidadeTotal_Visivel" class="form-control" placeholder=@Resource.QuantidadeTotal readonly />
                    <input type="hidden" asp-for="QuantidadeTotal" />
                </div>
                <div class="col-md-6 mb-3">
                    <input type="text" id="TotalPrecoUnit_Visivel" class="form-control" placeholder=@Resource.PrecoTotal readonly />
                    <input type="hidden" asp-for="TotalPrecoUnit" />
                </div>
            </div>

            <div class="form-group mb-3">
                <input type="submit" value=@Resource.Criar class="btn btn-custom mt-2" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />

    <script>
        $(function () {
            let pecasData = {};
            let loaded = false;

            function toggleSection() {
                const cId = $('#ClienteId').val();
                if (cId) {
                    $('#sem-cliente').hide();
                    if (!loaded) loadPecas(cId);
                } else {
                    $('#sem-cliente').show();
                    $('#pecasCards').empty();
                    hideAddButton();
                }
            }

            function loadPecas(clienteId) {
                $.getJSON(`/Encomendas/GetPecasPorCliente?clienteId=${clienteId}`, function (data) {
                    pecasData = {};
                    data.forEach(p => pecasData[p.id] = p);
                    renderAllCards();
                    loaded = true;
                });
            }

            function renderAllCards() {
                const $cards = $('#pecasCards');
                $cards.empty();
                Object.keys(pecasData).forEach(id => {
                    $cards.append(createCard(id));
                });
                updateTotals();
                toggleAddButton();
            }

            function updateTotals() {
                let totalQty = 0, totalPrice = 0;
                $('#pecasCards .card-body').each(function () {
                    const id = $(this).data('id');
                    const qty = parseInt($(this).find('.peca-qty').val()) || 0;
                    if (id && pecasData[id]) {
                        totalQty += qty;
                        totalPrice += parseFloat(pecasData[id].preco) * qty;
                    }
                });
                $('#QuantidadeTotal_Visivel').val(totalQty);
                $('#TotalPrecoUnit_Visivel').val(totalPrice.toFixed(2).replace('.', ','));
                $('input[name="QuantidadeTotal"]').val(totalQty);
                $('input[name="TotalPrecoUnit"]').val(totalPrice.toFixed(2));
            }

            function createCard(id) {
                const p = pecasData[id];
                const displayPrice = parseFloat(p.preco).toFixed(2).replace('.', ',');
                return `
                                    <div class="col-md-4">
                                        <div class="card shadow-sm">
                                            <img src="${p.imagem}" class="card-img-top img-fluid" alt="${p.nome}" style="max-width:100%; max-height:100px; object-fit:contain;" />
                                            <div class="card-body" data-id="${id}">
                                                <h6 class="card-title">${p.nome}</h6>
                                                <p class="card-text small">@Resource.PrecoUnit: ${displayPrice} €</p>
                                                <div class="input-group input-group-sm mb-2">
                                                    <input type="number" class="form-control peca-qty" value="1" min="1">
                                                    <button class="btn btn-danger btn-sm remove-card">@Resource.Remover</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>`;
            }

            function toggleAddButton() {
                const count = $('#pecasCards .card').length;
                $('#addPecaBtn').toggle(count === 0);
            }

            function hideAddButton() {
                $('#addPecaBtn').hide();
            }

            $(document).on('click', '.remove-card', function () {
                $(this).closest('.col-md-4').remove();
                updateTotals();
                toggleAddButton();
            });

            $(document).on('input change', '.peca-qty', updateTotals);

            $('#cliente-nome').autocomplete({
                source: '/Clientes/Search',
                minLength: 1,
                select: (e, ui) => {
                    $('#cliente-nome').val(ui.item.label);
                    $('#ClienteId').val(ui.item.value);
                    toggleSection();
                    return false;
                }
            }).on('input', function () {
                $('#ClienteId').val('');
                loaded = false; // carrega as peças novamente quando muda de cliente
                toggleSection();
            });

            $('#encomendaForm').on('submit', function () {
                $('#hidden-inputs-container').empty();
                $('#pecasCards .card-body').each(function () {
                    const id = $(this).data('id');
                    const qty = parseInt($(this).find('.peca-qty').val()) || 0;
                    if (qty > 0) {
                        $('#hidden-inputs-container').append(
                            `<input type="hidden" name="pecasSelecionadas" value="${id}" />` +
                            `<input type="hidden" name="quantidades" value="${qty}" />`
                        );
                    }
                });
            });

            hideAddButton();
            toggleSection();
        });
    </script>
}