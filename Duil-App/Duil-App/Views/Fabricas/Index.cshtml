@model PaginatedList<Duil_App.Models.Fabricas>
@using Duil_App.Resources

@{
    ViewData["Title"] = Resource.Fabricas;
    ViewData["BodyClass"] = "paginas-index-fundo";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">


<div class="container-fluid d-flex justify-content-center align-items-center position-relative"
     style="height: 250px; background-color: #b4bdc1;">
    <h1 class="fw-light text-white">@Resource.Fabricas</h1>

    <a asp-action="Create"
       class="btn position-absolute fs-5 px-5 py-3 navbar-blue text-white"
       style="bottom: 0; transform: translateY(50%); right: 80px; border-radius: 10px;">
        @Resource.adicionarFabrica
    </a>
    <form asp-controller="Fabricas" asp-action="Index" method="get"
          class="position-absolute fs-3 px-5 py-3 d-flex align-items-center"
          style="bottom: 0; transform: translateY(50%); left: 100px; border-radius: 10px;">
        <input type="text" name="texto"
               value="@Context.Request.Query["texto"]"
               placeholder="Pesquisa por nome"
               class="form-control me-2"
               style="min-width: 300px;" />

        <button type="submit" class="btn btn-light">
            <i class="bi bi-search"></i>
        </button>
    </form>

</div>
<div class="container p-5 mt-4">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model[0].Nif)</th>
                <th>@Html.DisplayNameFor(model => model[0].Nome)</th>
                <th>@Html.DisplayNameFor(model => model[0].Pais)</th>
                <th>@Html.DisplayNameFor(model => model[0].Telemovel)</th>
                <th>@Resource.Acoes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Nif)</td>
                    <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                    <td>@Html.DisplayFor(modelItem => item.Pais)</td>
                    <td>@Html.DisplayFor(modelItem => item.Telemovel)</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Nif"
                           class="btn btn-sm btn-outline-secondary"
                           title=@Resource.DetalhesDe>
                            <i class="bi bi-info-circle-fill"></i>
                        </a>
                        <a asp-action="Edit" asp-route-id="@item.Nif"
                           class="btn btn-sm btn-outline-primary ms-1"
                           title=@Resource.modificarTexto>
                            <i class="bi bi-pencil-fill"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Nif"
                           class="btn btn-sm btn-outline-danger ms-1"
                           title=@Resource.Remover>
                            <i class="bi bi-trash-fill"></i>
                        </a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="d-flex justify-content-center gap-2 mt-4">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-secondary @prevDisabled">
        Anterior
    </a>

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-secondary @nextDisabled">
        Seguinte
    </a>
</div>